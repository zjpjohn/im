//[[prepareMssql]]
Prepare the MS SQL Server Database for the Tigase Server
========================================================
Wojciech Kapcia <wojciech.kapcia@tigase.org>
v2.0, June 2014: Reformatted for AsciiDoc.
:toc:
:numbered:
:website: http://tigase.net
:Date: 2013-09-04 14:57

This guide describes how to prepare the MS SQL Server database for connecting the Tigase server to it.

Basic Setup
-----------

It's expected that a working installation of Microsoft SQL Server is present. Following guide will describe necessary configuration option required for using MS SQL Server with Tigase XMPP Server.

Preparing SQL Server Instance
-----------------------------

After installation of SQL Server an instance needs to be configure to handle incoming JDBC connections. For that purpose it's required to open _SQL Server Configuration Manager_. In the left-hand side panel navigate to _SQL Server Configuration Manager_, then _SQL Server Network Configuration -> Protocols for $\{INSTANCE_NAME}_. After selecting instance in the right-hand side panel select TCP/IP and open _Properties_, in the Protocol tab in General section select Yes for Enabled property. In the IP Addresses tab select Yes for Active and Enabled properties of all IP Addresses that you want SQL Server to handle. Subsequently set TCP Port property (if missing) to the default value - 1433.A restart of the instance may be required afterwards.

Configuring using SQL Server Management Studio
----------------------------------------------

In order to prepare database one can use either Wizards or execute queries directly in the Query Editor. First of all you need to establish connection to the SQL Server instance thus from Object Explorer select Connect and in the Connect to Server dialog enter administrator credentials.

Using Wizards
~~~~~~~~~~~~~

- Create Login
+
In the left-hand side panel select Security -> Logins and from context menu choose New Login, in the Wizard window enter desired Login name, select SQL Server authentication and enter desired password subsequently confirming action with OK

- Create Database
+
From the Object Explorer select Databases node and from context menu select New Database; in the Wizard window enter desired Database name and enter previously created Login name into Owner field; subsequently confirming action with OK.

Using Queries
~~~~~~~~~~~~~

From the Object Explorer root node's context menu select New Query. In the Query windows execute following statements adjusting details to your liking:


[source,sql]
-------------------------------------
USE [master]
GO

CREATE DATABASE [tigasedb];
GO

CREATE LOGIN [tigase] WITH PASSWORD=N'tigase12', DEFAULT_DATABASE=[tigasedb]
GO

ALTER AUTHORIZATION ON DATABASE::tigasedb TO tigase;
GO
-------------------------------------

Import Schema
-------------

From the File menu Select Open -> File (or use Ctrl+O) and then open following files:

- sqlserver-schema-5-1-schema.sql
- sqlserver-schema-5-1-sp.sql
- sqlserver-schema-5-1-props.sql

Subsequently select created database from the list of Available Databases (Ctrl+U) available on the toolbar and execute each of the opened files in the order listed above.

Configuring from command line tool
----------------------------------

Creation of the database and import of schema can be done from command line as well. In order to do that one needs to execute following commands (either from directory where Tigase XMPP Server is installed or paths to the schema need to be adjusted accordingly):

[source,bash]
-------------------------------------
sqlcmd -S %servername% -U %root_user% -P %root_pass% -Q "CREATE DATABASE [%database%]"
sqlcmd -S %servername% -U %root_user% -P %root_pass% -Q "CREATE LOGIN [%user%] WITH PASSWORD=N'%password%', DEFAULT_DATABASE=[%database%]"
sqlcmd -S %servername% -U %root_user% -P %root_pass% -d %database% -Q "ALTER AUTHORIZATION ON DATABASE::%database% TO %user%;"
sqlcmd -S %servername% -U %root_user% -P %root_pass% -d %database% -i database\sqlserver-schema-5-1-schema.sql
sqlcmd -S %servername% -U %root_user% -P %root_pass% -d %database% -i database\sqlserver-schema-5-1-sp.sql
sqlcmd -S %servername% -U %root_user% -P %root_pass% -d %database% -i database\sqlserver-schema-5-1-props.sql
-------------------------------------

Above can be automatized with provided script %tigase-server%\scripts\db-create-sqlserver.cmd (note: it needs to be executed from main Tigase XMPP Server directory due to maintain correct paths):

[source,sh]
-------------------------------------
$ scripts\db-create-sqlserver.cmd %database_servername% %database_name% %tigase_username% %tigase_password% %root_username% %root_password%
-------------------------------------

If no parameters are provided then defaults are used:

[source,bash]
-------------------------------------
%database_servername%=localhost
%database_name%=tigasedb
%tigase_username%=tigase
%tigase_password%=tigase12
%root_username%=root
%root_password%=root
-------------------------------------

Tigase configuration - init.properties
--------------------------------------

Configuration of the MS SQL Server follows general database convention. For MS SQL Support --user-db needs to be set to sqlserver:

[source,bash]
-------------------------------------
--user-db=sqlserver
-------------------------------------

and the --user-db-uri needs to point to the configured database:

[source,bash]
-------------------------------------
--user-db-uri=jdbc:[jtds:]sqlserver://db_hostname:port[;property=val]
-------------------------------------

where any number of additional can (and should) consist of:

- databaseName - name of the database
- user - username configured to access database
- password - password for the above username
- schema - name of the database schema
- lastUpdateCount - 'false' value causes all update counts to be returned, including those returned by server triggers

Example:

[source,sh]
-------------------------------------
--user-db-uri=jdbc:sqlserver://hostname:1433;databaseName=tigasedb;user=tigase;password=tigase12;schema=dbo;lastUpdateCount=false
-------------------------------------

JDBC: jTDS vs MS JDBC driver
----------------------------

Tigase XMPP Server supports two JDBC drivers intended to be used with Microsoft SQL Server - one created and provided by Microsoft itself and the alternative implementation - jTDS. Tigase is shipped with the latter in the distribution packages, wowever we do not recommend using jDTS with Tigase and urge users to use JDBC driver created by Microsoft. It can be downloaded from Microsoft website: link:http://www.microsoft.com/en-us/download/details.aspx?displaylang=en&id=11774[JDBC Driver 4.0 for SQL Server] and unpack archive, then copy sqljdbc_4.0/enu/sqljdbc4.jar file to $\{tigase-server}/jars directory.

Depending on the driver used --user-db-uri needs to be configured accordingly.

- Microsoft driver:
+
[source,bash]
-------------------------------------
--user-db-uri=jdbc:sqlserver://...
-------------------------------------
- jDTS driver
+
[source,bash]
-------------------------------------
--user-db-uri=jdbc:jdts:sqlserver://...
-------------------------------------

